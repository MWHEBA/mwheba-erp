# Generated by Django 4.2.7 on 2025-10-22 13:27

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="AccountingPeriod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="اسم الفترة")),
                ("start_date", models.DateField(verbose_name="تاريخ البداية")),
                ("end_date", models.DateField(verbose_name="تاريخ النهاية")),
                (
                    "status",
                    models.CharField(
                        choices=[("open", "مفتوحة"), ("closed", "مغلقة")],
                        default="open",
                        max_length=10,
                        verbose_name="الحالة",
                    ),
                ),
                (
                    "closed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الإغلاق"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "closed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="periods_closed",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أغلق بواسطة",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="periods_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
            ],
            options={
                "verbose_name": "فترة محاسبية",
                "verbose_name_plural": "الفترات المحاسبية",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="AccountType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=10, unique=True, verbose_name="كود النوع"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="اسم النوع")),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("asset", "أصول"),
                            ("liability", "خصوم"),
                            ("equity", "حقوق الملكية"),
                            ("revenue", "إيرادات"),
                            ("expense", "مصروفات"),
                        ],
                        max_length=20,
                        verbose_name="التصنيف",
                    ),
                ),
                (
                    "nature",
                    models.CharField(
                        choices=[("debit", "مدين"), ("credit", "دائن")],
                        max_length=10,
                        verbose_name="الطبيعة",
                    ),
                ),
                (
                    "level",
                    models.PositiveIntegerField(default=1, verbose_name="المستوى"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="نشط")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="account_types_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="financial.accounttype",
                        verbose_name="النوع الأب",
                    ),
                ),
            ],
            options={
                "verbose_name": "نوع الحساب",
                "verbose_name_plural": "أنواع الحسابات",
                "ordering": ["code"],
            },
        ),
        migrations.CreateModel(
            name="BankReconciliation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reconciliation_date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="تاريخ التسوية"
                    ),
                ),
                (
                    "system_balance",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="رصيد النظام"
                    ),
                ),
                (
                    "bank_balance",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="رصيد البنك"
                    ),
                ),
                (
                    "difference",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="الفرق"
                    ),
                ),
                (
                    "bank_statement_reference",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="مرجع كشف الحساب",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="ملاحظات"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "قيد المراجعة"),
                            ("approved", "معتمدة"),
                            ("rejected", "مرفوضة"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="الحالة",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الاعتماد"
                    ),
                ),
            ],
            options={
                "verbose_name": "تسوية بنكية",
                "verbose_name_plural": "التسويات البنكية",
                "ordering": ["-reconciliation_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ChartOfAccounts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=8,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="كود الحساب يجب أن يكون من 4 إلى 8 أرقام",
                                regex="^\\d{4,8}$",
                            )
                        ],
                        verbose_name="كود الحساب",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="اسم الحساب")),
                (
                    "name_en",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="الاسم بالإنجليزية",
                    ),
                ),
                (
                    "level",
                    models.PositiveIntegerField(default=1, verbose_name="المستوى"),
                ),
                (
                    "is_leaf",
                    models.BooleanField(
                        default=True,
                        help_text="الحسابات النهائية فقط يمكن إدراج قيود عليها",
                        verbose_name="حساب نهائي",
                    ),
                ),
                (
                    "is_bank_account",
                    models.BooleanField(default=False, verbose_name="حساب بنكي"),
                ),
                (
                    "is_cash_account",
                    models.BooleanField(default=False, verbose_name="حساب نقدي"),
                ),
                (
                    "is_reconcilable",
                    models.BooleanField(default=False, verbose_name="يخضع للتسوية"),
                ),
                (
                    "is_control_account",
                    models.BooleanField(default=False, verbose_name="حساب رقابي"),
                ),
                (
                    "opening_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="الرصيد الافتتاحي للحساب",
                        max_digits=15,
                        verbose_name="الرصيد الافتتاحي",
                    ),
                ),
                (
                    "opening_balance_date",
                    models.DateField(
                        blank=True,
                        help_text="تاريخ الرصيد الافتتاحي",
                        null=True,
                        verbose_name="تاريخ الرصيد الافتتاحي",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="الوصف"),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="ملاحظات"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="نشط")),
                (
                    "is_system_account",
                    models.BooleanField(
                        default=False,
                        help_text="الحسابات النظامية لا يمكن حذفها",
                        verbose_name="حساب نظام",
                    ),
                ),
                (
                    "bank_name",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="اسم البنك"
                    ),
                ),
                (
                    "account_number",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="رقم الحساب"
                    ),
                ),
                (
                    "iban",
                    models.CharField(
                        blank=True, max_length=34, null=True, verbose_name="رقم الآيبان"
                    ),
                ),
                (
                    "swift_code",
                    models.CharField(
                        blank=True, max_length=11, null=True, verbose_name="رمز السويفت"
                    ),
                ),
                (
                    "credit_limit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="الحد الأقصى للسحب على المكشوف",
                        max_digits=15,
                        null=True,
                        verbose_name="حد الائتمان",
                    ),
                ),
                (
                    "minimum_balance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="الحد الأدنى المطلوب للرصيد",
                        max_digits=15,
                        null=True,
                        verbose_name="الحد الأدنى للرصيد",
                    ),
                ),
                (
                    "low_balance_alert",
                    models.BooleanField(
                        default=False, verbose_name="تنبيه الرصيد المنخفض"
                    ),
                ),
                (
                    "low_balance_threshold",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=15,
                        null=True,
                        verbose_name="عتبة الرصيد المنخفض",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "account_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="accounts",
                        to="financial.accounttype",
                        verbose_name="نوع الحساب",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="chart_accounts_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="financial.chartofaccounts",
                        verbose_name="الحساب الأب",
                    ),
                ),
            ],
            options={
                "verbose_name": "حساب",
                "verbose_name_plural": "دليل الحسابات",
                "ordering": ["code"],
            },
        ),
        migrations.CreateModel(
            name="FinancialCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="الاسم")),
                (
                    "name_en",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="الاسم بالإنجليزية",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        unique=True,
                        verbose_name="الكود",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("expense", "مصروف"),
                            ("income", "إيراد"),
                            ("both", "مختلط"),
                        ],
                        max_length=20,
                        verbose_name="النوع",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("high", "عالية"),
                            ("medium", "متوسطة"),
                            ("low", "منخفضة"),
                        ],
                        default="medium",
                        max_length=10,
                        verbose_name="الأولوية",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="الوصف"),
                ),
                (
                    "level",
                    models.PositiveIntegerField(default=1, verbose_name="المستوى"),
                ),
                (
                    "budget_limit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="الحد الأقصى للإنفاق في هذا التصنيف",
                        max_digits=12,
                        null=True,
                        verbose_name="حد الميزانية",
                    ),
                ),
                (
                    "warning_threshold",
                    models.DecimalField(
                        decimal_places=2,
                        default=80.0,
                        help_text="نسبة التحذير من حد الميزانية",
                        max_digits=5,
                        verbose_name="عتبة التحذير",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="نشط")),
                (
                    "is_system",
                    models.BooleanField(
                        default=False,
                        help_text="فئة أساسية لا يمكن حذفها",
                        verbose_name="فئة نظام",
                    ),
                ),
                (
                    "requires_approval",
                    models.BooleanField(default=False, verbose_name="يتطلب موافقة"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_categories",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="financial.financialcategory",
                        verbose_name="التصنيف الأب",
                    ),
                ),
            ],
            options={
                "verbose_name": "فئة مالية",
                "verbose_name_plural": "التصنيفات المالية",
                "ordering": ["type", "level", "name"],
            },
        ),
        migrations.CreateModel(
            name="FinancialTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("income", "إيراد"),
                            ("expense", "مصروف"),
                            ("transfer", "تحويل"),
                            ("adjustment", "تسوية"),
                        ],
                        max_length=20,
                        verbose_name="نوع المعاملة",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="العنوان")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="الوصف"),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="المبلغ",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="التاريخ"
                    ),
                ),
                (
                    "due_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="تاريخ الاستحقاق"
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("high", "عالية"),
                            ("medium", "متوسطة"),
                            ("low", "منخفضة"),
                        ],
                        default="medium",
                        max_length=10,
                        verbose_name="الأولوية",
                    ),
                ),
                (
                    "reference_number",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="رقم المرجع"
                    ),
                ),
                (
                    "external_reference",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="المرجع الخارجي",
                    ),
                ),
                (
                    "invoice_number",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="رقم الفاتورة",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "مسودة"),
                            ("pending", "قيد الانتظار"),
                            ("approved", "معتمد"),
                            ("processed", "منفذ"),
                            ("cancelled", "ملغي"),
                            ("rejected", "مرفوض"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="الحالة",
                    ),
                ),
                (
                    "requires_approval",
                    models.BooleanField(default=False, verbose_name="يتطلب موافقة"),
                ),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الاعتماد"
                    ),
                ),
                (
                    "tags",
                    models.CharField(
                        blank=True,
                        help_text="علامات مفصولة بفواصل",
                        max_length=200,
                        null=True,
                        verbose_name="العلامات",
                    ),
                ),
                (
                    "attachments_count",
                    models.PositiveIntegerField(default=0, verbose_name="عدد المرفقات"),
                ),
                (
                    "vendor_name",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="اسم المورد/العميل",
                    ),
                ),
                (
                    "vendor_contact",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="جهة الاتصال",
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="طريقة الدفع"
                    ),
                ),
                (
                    "payment_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="تاريخ الدفع/الاستلام"
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="مبلغ الضريبة",
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="مبلغ الخصم",
                    ),
                ),
                (
                    "net_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="المبلغ الصافي",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="financial_transactions",
                        to="financial.chartofaccounts",
                        verbose_name="الحساب الرئيسي",
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_transactions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="اعتمد بواسطة",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="financial.financialcategory",
                        verbose_name="التصنيف",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_financial_transactions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
            ],
            options={
                "verbose_name": "معاملة مالية",
                "verbose_name_plural": "المعاملات المالية",
                "db_table": "financial_transaction",
                "ordering": ["-date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="JournalEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="رقم القيد"
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="التاريخ"
                    ),
                ),
                (
                    "entry_type",
                    models.CharField(
                        choices=[
                            ("manual", "يدوي"),
                            ("automatic", "تلقائي"),
                            ("adjustment", "تسوية"),
                            ("closing", "إقفال"),
                            ("opening", "افتتاحي"),
                        ],
                        default="manual",
                        max_length=20,
                        verbose_name="نوع القيد",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "مسودة"),
                            ("posted", "مرحل"),
                            ("cancelled", "ملغي"),
                        ],
                        default="draft",
                        max_length=10,
                        verbose_name="الحالة",
                    ),
                ),
                ("description", models.TextField(verbose_name="البيان")),
                (
                    "reference",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="المرجع"
                    ),
                ),
                (
                    "reference_type",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="نوع المرجع"
                    ),
                ),
                (
                    "reference_id",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="معرف المرجع"
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="ملاحظات إضافية على القيد",
                        null=True,
                        verbose_name="ملاحظات",
                    ),
                ),
                (
                    "posted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الترحيل"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "accounting_period",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="journal_entries",
                        to="financial.accountingperiod",
                        verbose_name="الفترة المحاسبية",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="entries_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
                (
                    "posted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="entries_posted",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="رحل بواسطة",
                    ),
                ),
            ],
            options={
                "verbose_name": "قيد يومي",
                "verbose_name_plural": "القيود اليومية",
                "ordering": ["-date", "-number"],
            },
        ),
        migrations.CreateModel(
            name="JournalEntryTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="اسم القالب")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="الوصف"),
                ),
                (
                    "entry_type",
                    models.CharField(
                        choices=[
                            ("manual", "يدوي"),
                            ("automatic", "تلقائي"),
                            ("adjustment", "تسوية"),
                            ("closing", "إقفال"),
                            ("opening", "افتتاحي"),
                        ],
                        default="manual",
                        max_length=20,
                        verbose_name="نوع القيد",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="نشط")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="entry_templates_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
            ],
            options={
                "verbose_name": "قالب قيد",
                "verbose_name_plural": "قوالب القيود",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TransactionAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="financial/transactions/%Y/%m/", verbose_name="الملف"
                    ),
                ),
                (
                    "file_name",
                    models.CharField(max_length=255, verbose_name="اسم الملف"),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(
                        help_text="بالبايت", verbose_name="حجم الملف"
                    ),
                ),
                (
                    "file_type",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="نوع الملف"
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="الوصف"
                    ),
                ),
                (
                    "uploaded_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="تاريخ الرفع"),
                ),
                (
                    "transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="financial.financialtransaction",
                        verbose_name="المعاملة",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="رفع بواسطة",
                    ),
                ),
            ],
            options={
                "verbose_name": "مرفق معاملة",
                "verbose_name_plural": "مرفقات المعاملات",
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="PaymentSyncOperation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "operation_id",
                    models.UUIDField(
                        default=uuid.uuid4, unique=True, verbose_name="معرف العملية"
                    ),
                ),
                (
                    "operation_type",
                    models.CharField(
                        choices=[
                            ("create_payment", "إنشاء دفعة"),
                            ("update_payment", "تحديث دفعة"),
                            ("delete_payment", "حذف دفعة"),
                            ("sync_payment", "مزامنة دفعة"),
                            ("rollback_payment", "التراجع عن دفعة"),
                        ],
                        max_length=20,
                        verbose_name="نوع العملية",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "قيد الانتظار"),
                            ("processing", "قيد المعالجة"),
                            ("completed", "مكتملة"),
                            ("failed", "فاشلة"),
                            ("rolled_back", "تم التراجع"),
                            ("retry", "إعادة المحاولة"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="الحالة",
                    ),
                ),
                ("object_id", models.PositiveIntegerField(verbose_name="معرف الكائن")),
                (
                    "payment_data",
                    models.JSONField(default=dict, verbose_name="بيانات الدفعة"),
                ),
                (
                    "sync_targets",
                    models.JSONField(default=list, verbose_name="أهداف المزامنة"),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="بدء التنفيذ"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="انتهاء التنفيذ"
                    ),
                ),
                (
                    "retry_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="عدد المحاولات"
                    ),
                ),
                (
                    "max_retries",
                    models.PositiveIntegerField(
                        default=3, verbose_name="الحد الأقصى للمحاولات"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, null=True, verbose_name="رسالة الخطأ"),
                ),
                (
                    "error_details",
                    models.JSONField(default=dict, verbose_name="تفاصيل الخطأ"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                        verbose_name="نوع الكائن",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="payment_sync_operations",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
            ],
            options={
                "verbose_name": "عملية تزامن دفعة",
                "verbose_name_plural": "عمليات تزامن المدفوعات",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PaymentSyncLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("create_customer_payment", "إنشاء دفعة عميل"),
                            ("create_supplier_payment", "إنشاء دفعة مورد"),
                            ("update_customer_payment", "تحديث دفعة عميل"),
                            ("update_supplier_payment", "تحديث دفعة مورد"),
                            ("delete_customer_payment", "حذف دفعة عميل"),
                            ("delete_supplier_payment", "حذف دفعة مورد"),
                            ("create_journal_entry", "إنشاء قيد محاسبي"),
                            ("update_balance_cache", "تحديث كاش الرصيد"),
                            ("rollback_operation", "التراجع عن العملية"),
                        ],
                        max_length=30,
                        verbose_name="الإجراء",
                    ),
                ),
                (
                    "target_model",
                    models.CharField(max_length=50, verbose_name="النموذج المستهدف"),
                ),
                (
                    "target_id",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="معرف الهدف"
                    ),
                ),
                (
                    "action_data",
                    models.JSONField(default=dict, verbose_name="بيانات الإجراء"),
                ),
                (
                    "result_data",
                    models.JSONField(default=dict, verbose_name="نتيجة الإجراء"),
                ),
                ("success", models.BooleanField(default=True, verbose_name="نجح")),
                (
                    "error_message",
                    models.TextField(blank=True, null=True, verbose_name="رسالة الخطأ"),
                ),
                (
                    "executed_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="وقت التنفيذ"),
                ),
                (
                    "execution_time",
                    models.FloatField(
                        blank=True, null=True, verbose_name="وقت التنفيذ (ثانية)"
                    ),
                ),
                (
                    "sync_operation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="financial.paymentsyncoperation",
                        verbose_name="عملية التزامن",
                    ),
                ),
            ],
            options={
                "verbose_name": "سجل تزامن دفعة",
                "verbose_name_plural": "سجلات تزامن المدفوعات",
                "ordering": ["-executed_at"],
            },
        ),
        migrations.CreateModel(
            name="PaymentSyncError",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "error_type",
                    models.CharField(
                        choices=[
                            ("validation_error", "خطأ في التحقق"),
                            ("database_error", "خطأ في قاعدة البيانات"),
                            ("network_error", "خطأ في الشبكة"),
                            ("permission_error", "خطأ في الصلاحيات"),
                            ("business_logic_error", "خطأ في منطق العمل"),
                            ("system_error", "خطأ في النظام"),
                        ],
                        max_length=20,
                        verbose_name="نوع الخطأ",
                    ),
                ),
                (
                    "error_code",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="كود الخطأ"
                    ),
                ),
                ("error_message", models.TextField(verbose_name="رسالة الخطأ")),
                (
                    "stack_trace",
                    models.TextField(blank=True, null=True, verbose_name="تتبع المكدس"),
                ),
                (
                    "context_data",
                    models.JSONField(default=dict, verbose_name="بيانات السياق"),
                ),
                (
                    "is_resolved",
                    models.BooleanField(default=False, verbose_name="تم الحل"),
                ),
                (
                    "resolution_notes",
                    models.TextField(
                        blank=True, null=True, verbose_name="ملاحظات الحل"
                    ),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الحل"
                    ),
                ),
                (
                    "occurred_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="وقت الحدوث"),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_sync_errors",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="حل بواسطة",
                    ),
                ),
                (
                    "sync_operation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="errors",
                        to="financial.paymentsyncoperation",
                        verbose_name="عملية التزامن",
                    ),
                ),
            ],
            options={
                "verbose_name": "خطأ تزامن دفعة",
                "verbose_name_plural": "أخطاء تزامن المدفوعات",
                "ordering": ["-occurred_at"],
            },
        ),
        migrations.CreateModel(
            name="PartnerTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[("contribution", "مساهمة"), ("withdrawal", "سحب")],
                        max_length=20,
                        verbose_name="نوع المعاملة",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="المبلغ",
                    ),
                ),
                (
                    "contribution_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("loan", "قرض للشركة"),
                            ("capital_increase", "زيادة رأس المال"),
                            ("temporary", "مساهمة مؤقتة"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="نوع المساهمة",
                    ),
                ),
                (
                    "withdrawal_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("loan_repayment", "سداد قرض سابق"),
                            ("capital_withdrawal", "سحب من رأس المال"),
                            ("profit_distribution", "توزيع أرباح"),
                            ("personal_expense", "مصروف شخصي"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="نوع السحب",
                    ),
                ),
                (
                    "transaction_date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="تاريخ المعاملة"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="سبب المساهمة أو السحب", verbose_name="الوصف"
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, null=True, verbose_name="ملاحظات إضافية"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "في الانتظار"),
                            ("approved", "موافق عليه"),
                            ("completed", "مكتمل"),
                            ("cancelled", "ملغي"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="الحالة",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الموافقة"
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_partner_transactions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="وافق عليه",
                    ),
                ),
                (
                    "cash_account",
                    models.ForeignKey(
                        help_text="الحساب النقدي أو البنكي",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="partner_cash_transactions",
                        to="financial.chartofaccounts",
                        verbose_name="حساب الخزينة",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_partner_transactions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشأ بواسطة",
                    ),
                ),
                (
                    "journal_entry",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="partner_transaction",
                        to="financial.journalentry",
                        verbose_name="القيد المحاسبي",
                    ),
                ),
                (
                    "partner_account",
                    models.ForeignKey(
                        help_text="حساب جاري الشريك",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="partner_transactions",
                        to="financial.chartofaccounts",
                        verbose_name="حساب الشريك",
                    ),
                ),
            ],
            options={
                "verbose_name": "معاملة الشريك",
                "verbose_name_plural": "معاملات الشريك",
                "ordering": ["-transaction_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PartnerSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "monthly_report_enabled",
                    models.BooleanField(default=True, verbose_name="تقرير شهري مفعل"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="حُدث بواسطة",
                    ),
                ),
            ],
            options={
                "verbose_name": "إعدادات الشراكة",
                "verbose_name_plural": "إعدادات الشراكة",
            },
        ),
        migrations.CreateModel(
            name="PartnerPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "permission_type",
                    models.CharField(
                        choices=[
                            ("view_dashboard", "عرض لوحة التحكم"),
                            ("create_contribution", "إنشاء مساهمة"),
                            ("create_withdrawal", "إنشاء سحب"),
                            ("view_transactions", "عرض المعاملات"),
                            ("view_balance", "عرض الرصيد"),
                            ("approve_transactions", "الموافقة على المعاملات"),
                            ("cancel_transactions", "إلغاء المعاملات"),
                            ("view_reports", "عرض التقارير"),
                            ("manage_settings", "إدارة الإعدادات"),
                        ],
                        max_length=50,
                        verbose_name="نوع الصلاحية",
                    ),
                ),
                (
                    "granted_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="تاريخ المنح"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="نشط")),
                (
                    "granted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="granted_partner_permissions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="منح بواسطة",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="partner_permissions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="المستخدم",
                    ),
                ),
            ],
            options={
                "verbose_name": "صلاحية الشريك",
                "verbose_name_plural": "صلاحيات الشركاء",
            },
        ),
        migrations.CreateModel(
            name="PartnerBalance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "total_contributions",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=15,
                        verbose_name="إجمالي المساهمات",
                    ),
                ),
                (
                    "total_withdrawals",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=15,
                        verbose_name="إجمالي السحوبات",
                    ),
                ),
                (
                    "current_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=15,
                        verbose_name="الرصيد الحالي",
                    ),
                ),
                (
                    "last_transaction_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="تاريخ آخر معاملة"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "partner_account",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="partner_balance",
                        to="financial.chartofaccounts",
                        verbose_name="حساب الشريك",
                    ),
                ),
            ],
            options={
                "verbose_name": "رصيد الشريك",
                "verbose_name_plural": "أرصدة الشركاء",
            },
        ),
        migrations.CreateModel(
            name="PartnerAuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("create_contribution", "إنشاء مساهمة"),
                            ("create_withdrawal", "إنشاء سحب"),
                            ("approve_transaction", "الموافقة على معاملة"),
                            ("cancel_transaction", "إلغاء معاملة"),
                            ("update_settings", "تحديث الإعدادات"),
                            ("grant_permission", "منح صلاحية"),
                            ("revoke_permission", "إلغاء صلاحية"),
                            ("view_dashboard", "عرض لوحة التحكم"),
                            ("view_reports", "عرض التقارير"),
                        ],
                        max_length=50,
                        verbose_name="الإجراء",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="وصف تفصيلي للإجراء المنفذ", verbose_name="الوصف"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="عنوان IP"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True, null=True, verbose_name="معلومات المتصفح"
                    ),
                ),
                (
                    "extra_data",
                    models.JSONField(
                        blank=True,
                        help_text="بيانات إضافية متعلقة بالإجراء",
                        null=True,
                        verbose_name="بيانات إضافية",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="الوقت"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="partner_audit_logs",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="المستخدم",
                    ),
                ),
            ],
            options={
                "verbose_name": "سجل تدقيق الشريك",
                "verbose_name_plural": "سجلات تدقيق الشريك",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="JournalEntryTemplateLine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "debit",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                        verbose_name="مدين",
                    ),
                ),
                (
                    "credit",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                        verbose_name="دائن",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="البيان"),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="template_lines",
                        to="financial.chartofaccounts",
                        verbose_name="الحساب",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lines",
                        to="financial.journalentrytemplate",
                        verbose_name="القالب",
                    ),
                ),
            ],
            options={
                "verbose_name": "بند قالب قيد",
                "verbose_name_plural": "بنود قوالب القيود",
            },
        ),
        migrations.CreateModel(
            name="JournalEntryLine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "debit",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                        verbose_name="مدين",
                    ),
                ),
                (
                    "credit",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                        verbose_name="دائن",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="البيان"),
                ),
                (
                    "cost_center",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="مركز التكلفة",
                    ),
                ),
                (
                    "project",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="المشروع"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="journal_lines",
                        to="financial.chartofaccounts",
                        verbose_name="الحساب",
                    ),
                ),
                (
                    "journal_entry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lines",
                        to="financial.journalentry",
                        verbose_name="القيد اليومي",
                    ),
                ),
            ],
            options={
                "verbose_name": "بند قيد",
                "verbose_name_plural": "بنود القيود",
            },
        ),
        migrations.AddField(
            model_name="financialtransaction",
            name="journal_entry",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="financial.journalentry",
                verbose_name="القيد المحاسبي",
            ),
        ),
        migrations.AddField(
            model_name="financialtransaction",
            name="to_account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="incoming_financial_transactions",
                to="financial.chartofaccounts",
                verbose_name="الحساب المستلم",
            ),
        ),
        migrations.CreateModel(
            name="CategoryBudget",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "period_type",
                    models.CharField(
                        choices=[
                            ("monthly", "شهرية"),
                            ("quarterly", "ربع سنوية"),
                            ("yearly", "سنوية"),
                            ("custom", "مخصصة"),
                        ],
                        max_length=20,
                        verbose_name="نوع الفترة",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="تاريخ البداية")),
                ("end_date", models.DateField(verbose_name="تاريخ النهاية")),
                (
                    "budget_amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="مبلغ الميزانية"
                    ),
                ),
                (
                    "spent_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="المبلغ المنفق",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="ملاحظات"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="نشط")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="budgets",
                        to="financial.financialcategory",
                        verbose_name="التصنيف",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_budgets",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
            ],
            options={
                "verbose_name": "ميزانية فئة",
                "verbose_name_plural": "ميزانيات التصنيفات",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="BankReconciliationItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "item_type",
                    models.CharField(
                        choices=[
                            ("deposit_in_transit", "إيداعات في الطريق"),
                            ("outstanding_check", "شيكات معلقة"),
                            ("bank_charge", "رسوم بنكية"),
                            ("bank_interest", "فوائد بنكية"),
                            ("error_correction", "تصحيح خطأ"),
                            ("other", "أخرى"),
                        ],
                        max_length=30,
                        verbose_name="نوع البند",
                    ),
                ),
                ("description", models.CharField(max_length=200, verbose_name="الوصف")),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="المبلغ"
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="المرجع"
                    ),
                ),
                (
                    "effect",
                    models.CharField(
                        choices=[
                            ("add_to_book", "إضافة لرصيد الدفاتر"),
                            ("subtract_from_book", "خصم من رصيد الدفاتر"),
                            ("add_to_bank", "إضافة لرصيد البنك"),
                            ("subtract_from_bank", "خصم من رصيد البنك"),
                        ],
                        max_length=30,
                        verbose_name="التأثير",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "reconciliation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="financial.bankreconciliation",
                        verbose_name="التسوية",
                    ),
                ),
            ],
            options={
                "verbose_name": "بند تسوية بنكية",
                "verbose_name_plural": "بنود التسوية البنكية",
                "ordering": ["item_type", "description"],
            },
        ),
        migrations.AddField(
            model_name="bankreconciliation",
            name="account",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bank_reconciliations",
                to="financial.chartofaccounts",
                verbose_name="الحساب",
            ),
        ),
        migrations.AddField(
            model_name="bankreconciliation",
            name="approved_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="approved_reconciliations",
                to=settings.AUTH_USER_MODEL,
                verbose_name="اعتمد بواسطة",
            ),
        ),
        migrations.AddField(
            model_name="bankreconciliation",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="bank_reconciliations",
                to=settings.AUTH_USER_MODEL,
                verbose_name="أنشئ بواسطة",
            ),
        ),
        migrations.AddField(
            model_name="bankreconciliation",
            name="journal_entry",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="bank_reconciliations",
                to="financial.journalentry",
                verbose_name="القيد المحاسبي",
            ),
        ),
        migrations.CreateModel(
            name="BalanceSnapshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("snapshot_date", models.DateField(verbose_name="تاريخ اللقطة")),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="الرصيد"
                    ),
                ),
                (
                    "transactions_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="عدد المعاملات"
                    ),
                ),
                (
                    "last_transaction_id",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="آخر معاملة"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "created_by_system",
                    models.BooleanField(
                        default=True, verbose_name="أنشئ بواسطة النظام"
                    ),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="balance_snapshots",
                        to="financial.chartofaccounts",
                        verbose_name="الحساب",
                    ),
                ),
            ],
            options={
                "verbose_name": "لقطة رصيد",
                "verbose_name_plural": "لقطات الأرصدة",
                "ordering": ["-snapshot_date"],
            },
        ),
        migrations.CreateModel(
            name="BalanceReconciliation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reconciliation_date", models.DateField(verbose_name="تاريخ التسوية")),
                (
                    "system_balance",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="رصيد النظام"
                    ),
                ),
                (
                    "calculated_balance",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="الرصيد المحسوب"
                    ),
                ),
                (
                    "external_balance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=15,
                        null=True,
                        verbose_name="الرصيد الخارجي",
                    ),
                ),
                (
                    "system_difference",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="فرق النظام",
                    ),
                ),
                (
                    "external_difference",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=15,
                        null=True,
                        verbose_name="فرق خارجي",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "قيد المراجعة"),
                            ("reconciled", "مسوى"),
                            ("discrepancy", "يوجد فرق"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="الحالة",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="ملاحظات"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reconciliations",
                        to="financial.chartofaccounts",
                        verbose_name="الحساب",
                    ),
                ),
                (
                    "reconciled_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="سوى بواسطة",
                    ),
                ),
            ],
            options={
                "verbose_name": "تسوية رصيد",
                "verbose_name_plural": "تسويات الأرصدة",
                "ordering": ["-reconciliation_date"],
            },
        ),
        migrations.CreateModel(
            name="BalanceAuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("calculate", "حساب"),
                            ("update", "تحديث"),
                            ("invalidate", "إبطال"),
                            ("refresh", "تحديث"),
                            ("snapshot", "لقطة"),
                        ],
                        max_length=20,
                        verbose_name="الإجراء",
                    ),
                ),
                (
                    "old_balance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=15,
                        null=True,
                        verbose_name="الرصيد القديم",
                    ),
                ),
                (
                    "new_balance",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="الرصيد الجديد"
                    ),
                ),
                (
                    "transaction_id",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="معرف المعاملة"
                    ),
                ),
                (
                    "journal_entry_id",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="معرف القيد"
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="الوقت"),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="ملاحظات"),
                ),
                (
                    "system_generated",
                    models.BooleanField(
                        default=True, verbose_name="مولد بواسطة النظام"
                    ),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="balance_audit_logs",
                        to="financial.chartofaccounts",
                        verbose_name="الحساب",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="المستخدم",
                    ),
                ),
            ],
            options={
                "verbose_name": "سجل مراجعة الرصيد",
                "verbose_name_plural": "سجلات مراجعة الأرصدة",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="AuditTrail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("create", "إنشاء"),
                            ("update", "تحديث"),
                            ("delete", "حذف"),
                            ("post", "ترحيل"),
                            ("unpost", "إلغاء ترحيل"),
                            ("sync", "ربط مالي"),
                            ("unsync", "إلغاء ربط مالي"),
                            ("approve", "اعتماد"),
                            ("reject", "رفض"),
                            ("cancel", "إلغاء"),
                        ],
                        max_length=20,
                        verbose_name="العملية",
                    ),
                ),
                (
                    "entity_type",
                    models.CharField(
                        choices=[
                            ("sale_payment", "دفعة مبيعات"),
                            ("purchase_payment", "دفعة مشتريات"),
                            ("journal_entry", "قيد محاسبي"),
                            ("cash_movement", "حركة خزن"),
                            ("sale", "فاتورة مبيعات"),
                            ("purchase", "فاتورة مشتريات"),
                        ],
                        max_length=30,
                        verbose_name="نوع الكيان",
                    ),
                ),
                ("entity_id", models.PositiveIntegerField(verbose_name="معرف الكيان")),
                (
                    "entity_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="اسم الكيان"
                    ),
                ),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "timestamp",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="وقت العملية"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="عنوان IP"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(blank=True, verbose_name="متصفح المستخدم"),
                ),
                ("description", models.TextField(verbose_name="وصف العملية")),
                ("reason", models.TextField(blank=True, verbose_name="سبب العملية")),
                (
                    "old_values",
                    models.JSONField(
                        blank=True, null=True, verbose_name="القيم القديمة"
                    ),
                ),
                (
                    "new_values",
                    models.JSONField(
                        blank=True, null=True, verbose_name="القيم الجديدة"
                    ),
                ),
                (
                    "changes",
                    models.JSONField(blank=True, null=True, verbose_name="التغييرات"),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True, null=True, verbose_name="معلومات إضافية"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "نجحت"),
                            ("failed", "فشلت"),
                            ("pending", "معلقة"),
                            ("cancelled", "ملغية"),
                        ],
                        default="success",
                        max_length=20,
                        verbose_name="حالة العملية",
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="رسالة الخطأ"),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="المستخدم",
                    ),
                ),
            ],
            options={
                "verbose_name": "سجل التدقيق",
                "verbose_name_plural": "سجلات التدقيق",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="AccountGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="اسم المجموعة")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="الوصف"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="نشط")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "accounts",
                    models.ManyToManyField(
                        blank=True,
                        related_name="groups",
                        to="financial.chartofaccounts",
                        verbose_name="الحسابات",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="account_groups_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
            ],
            options={
                "verbose_name": "مجموعة حسابات",
                "verbose_name_plural": "مجموعات الحسابات",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AccountBalanceCache",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "current_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="الرصيد الحالي",
                    ),
                ),
                (
                    "available_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="الرصيد المتاح",
                    ),
                ),
                (
                    "pending_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="الرصيد المعلق",
                    ),
                ),
                (
                    "last_updated",
                    models.DateTimeField(auto_now=True, verbose_name="آخر تحديث"),
                ),
                (
                    "last_transaction_id",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="آخر معاملة"
                    ),
                ),
                (
                    "total_debits",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="إجمالي المدين",
                    ),
                ),
                (
                    "total_credits",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="إجمالي الدائن",
                    ),
                ),
                (
                    "transactions_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="عدد المعاملات"
                    ),
                ),
                ("is_valid", models.BooleanField(default=True, verbose_name="صالح")),
                (
                    "needs_refresh",
                    models.BooleanField(default=False, verbose_name="يحتاج تحديث"),
                ),
                (
                    "account",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="balance_cache",
                        to="financial.chartofaccounts",
                        verbose_name="الحساب",
                    ),
                ),
            ],
            options={
                "verbose_name": "كاش رصيد الحساب",
                "verbose_name_plural": "كاش أرصدة الحسابات",
            },
        ),
        migrations.CreateModel(
            name="ExpenseTransaction",
            fields=[],
            options={
                "verbose_name": "مصروف",
                "verbose_name_plural": "المصروفات",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("financial.financialtransaction",),
        ),
        migrations.CreateModel(
            name="IncomeTransaction",
            fields=[],
            options={
                "verbose_name": "إيراد",
                "verbose_name_plural": "الإيرادات",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("financial.financialtransaction",),
        ),
        migrations.CreateModel(
            name="PaymentSyncRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="اسم القاعدة")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="الوصف"),
                ),
                (
                    "source_model",
                    models.CharField(
                        choices=[
                            ("sale_payment", "دفعة مبيعات"),
                            ("purchase_payment", "دفعة مشتريات"),
                            ("customer_payment", "دفعة عميل"),
                            ("supplier_payment", "دفعة مورد"),
                        ],
                        max_length=20,
                        verbose_name="النموذج المصدر",
                    ),
                ),
                (
                    "trigger_event",
                    models.CharField(
                        choices=[
                            ("on_create", "عند الإنشاء"),
                            ("on_update", "عند التحديث"),
                            ("on_delete", "عند الحذف"),
                            ("on_status_change", "عند تغيير الحالة"),
                        ],
                        max_length=20,
                        verbose_name="حدث التشغيل",
                    ),
                ),
                (
                    "sync_to_customer_payment",
                    models.BooleanField(
                        default=False, verbose_name="مزامنة مع دفعات العملاء"
                    ),
                ),
                (
                    "sync_to_supplier_payment",
                    models.BooleanField(
                        default=False, verbose_name="مزامنة مع دفعات الموردين"
                    ),
                ),
                (
                    "sync_to_journal_entry",
                    models.BooleanField(
                        default=False, verbose_name="مزامنة مع القيود المحاسبية"
                    ),
                ),
                (
                    "sync_to_balance_cache",
                    models.BooleanField(
                        default=False, verbose_name="مزامنة مع كاش الأرصدة"
                    ),
                ),
                (
                    "conditions",
                    models.JSONField(default=dict, verbose_name="شروط التزامن"),
                ),
                (
                    "mapping_rules",
                    models.JSONField(default=dict, verbose_name="قواعد الربط"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="نشطة")),
                (
                    "priority",
                    models.PositiveIntegerField(default=1, verbose_name="الأولوية"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="payment_sync_rules",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
            ],
            options={
                "verbose_name": "قاعدة تزامن دفعة",
                "verbose_name_plural": "قواعد تزامن المدفوعات",
                "ordering": ["priority", "name"],
                "indexes": [
                    models.Index(
                        fields=["source_model", "trigger_event"],
                        name="financial_p_source__b1b82a_idx",
                    ),
                    models.Index(
                        fields=["is_active", "priority"],
                        name="financial_p_is_acti_6ff8af_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="paymentsyncoperation",
            index=models.Index(
                fields=["operation_id"], name="financial_p_operati_1e4744_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paymentsyncoperation",
            index=models.Index(
                fields=["status", "created_at"], name="financial_p_status_e96d49_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paymentsyncoperation",
            index=models.Index(
                fields=["content_type", "object_id"],
                name="financial_p_content_4b77fc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="paymentsynclog",
            index=models.Index(
                fields=["sync_operation", "executed_at"],
                name="financial_p_sync_op_29c8a3_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="paymentsynclog",
            index=models.Index(
                fields=["action", "success"], name="financial_p_action_0f81e4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paymentsyncerror",
            index=models.Index(
                fields=["sync_operation", "occurred_at"],
                name="financial_p_sync_op_c7336e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="paymentsyncerror",
            index=models.Index(
                fields=["error_type", "is_resolved"],
                name="financial_p_error_t_bb298b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="partnertransaction",
            index=models.Index(
                fields=["transaction_type", "transaction_date"],
                name="financial_p_transac_9bc664_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="partnertransaction",
            index=models.Index(
                fields=["partner_account", "status"],
                name="financial_p_partner_2931d9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="partnertransaction",
            index=models.Index(
                fields=["status", "created_at"], name="financial_p_status_37ff17_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="partnerpermission",
            index=models.Index(
                fields=["user", "permission_type", "is_active"],
                name="financial_p_user_id_eabdc8_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="partnerpermission",
            unique_together={("user", "permission_type")},
        ),
        migrations.AddIndex(
            model_name="partnerauditlog",
            index=models.Index(
                fields=["user", "action", "timestamp"],
                name="financial_p_user_id_b59702_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="partnerauditlog",
            index=models.Index(
                fields=["action", "timestamp"], name="financial_p_action_1b330b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="journalentryline",
            index=models.Index(
                fields=["account", "journal_entry"],
                name="financial_j_account_4e56b0_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="journalentryline",
            index=models.Index(
                fields=["journal_entry"], name="financial_j_journal_0d4951_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="journalentry",
            index=models.Index(
                fields=["date", "status"], name="financial_j_date_1898e8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="journalentry",
            index=models.Index(fields=["number"], name="financial_j_number_a4f2ef_idx"),
        ),
        migrations.AddIndex(
            model_name="journalentry",
            index=models.Index(
                fields=["reference_type", "reference_id"],
                name="financial_j_referen_8bd693_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="financialcategory",
            unique_together={("name", "type", "parent")},
        ),
        migrations.AddIndex(
            model_name="chartofaccounts",
            index=models.Index(fields=["code"], name="financial_c_code_8cbc99_idx"),
        ),
        migrations.AddIndex(
            model_name="chartofaccounts",
            index=models.Index(
                fields=["account_type", "is_active"],
                name="financial_c_account_938ba3_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="chartofaccounts",
            index=models.Index(
                fields=["parent", "level"], name="financial_c_parent__7d1112_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="categorybudget",
            unique_together={("category", "start_date", "end_date")},
        ),
        migrations.AddIndex(
            model_name="bankreconciliation",
            index=models.Index(
                fields=["account", "reconciliation_date"],
                name="financial_b_account_e1787f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="bankreconciliation",
            index=models.Index(
                fields=["status", "created_at"], name="financial_b_status_0c0148_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="balancesnapshot",
            index=models.Index(
                fields=["account", "snapshot_date"],
                name="financial_b_account_9b3132_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="balancesnapshot",
            index=models.Index(
                fields=["snapshot_date"], name="financial_b_snapsho_37b4d9_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="balancesnapshot",
            unique_together={("account", "snapshot_date")},
        ),
        migrations.AddIndex(
            model_name="balancereconciliation",
            index=models.Index(
                fields=["account", "reconciliation_date"],
                name="financial_b_account_52ce37_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="balancereconciliation",
            index=models.Index(
                fields=["status", "reconciliation_date"],
                name="financial_b_status_f45fa2_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="balancereconciliation",
            unique_together={("account", "reconciliation_date")},
        ),
        migrations.AddIndex(
            model_name="balanceauditlog",
            index=models.Index(
                fields=["account", "timestamp"], name="financial_b_account_44e5a0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="balanceauditlog",
            index=models.Index(
                fields=["action", "timestamp"], name="financial_b_action_6958e6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="audittrail",
            index=models.Index(
                fields=["entity_type", "entity_id"],
                name="financial_a_entity__eda2a5_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="audittrail",
            index=models.Index(
                fields=["user", "timestamp"], name="financial_a_user_id_c7094c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="audittrail",
            index=models.Index(
                fields=["action", "timestamp"], name="financial_a_action_14d918_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="audittrail",
            index=models.Index(
                fields=["content_type", "object_id"],
                name="financial_a_content_9d4feb_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="accountingperiod",
            unique_together={("start_date", "end_date")},
        ),
        migrations.AddIndex(
            model_name="accountbalancecache",
            index=models.Index(
                fields=["last_updated"], name="financial_a_last_up_50f0c8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="accountbalancecache",
            index=models.Index(
                fields=["is_valid", "needs_refresh"],
                name="financial_a_is_vali_679702_idx",
            ),
        ),
    ]
