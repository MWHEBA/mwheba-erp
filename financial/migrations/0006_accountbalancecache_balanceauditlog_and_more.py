# Generated by Django 4.2.7 on 2025-09-28 15:48

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("financial", "0005_new_accounting_system"),
    ]

    operations = [
        migrations.CreateModel(
            name="AccountBalanceCache",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "current_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="الرصيد الحالي",
                    ),
                ),
                (
                    "available_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="الرصيد المتاح",
                    ),
                ),
                (
                    "pending_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="الرصيد المعلق",
                    ),
                ),
                (
                    "last_updated",
                    models.DateTimeField(auto_now=True, verbose_name="آخر تحديث"),
                ),
                (
                    "last_transaction_id",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="آخر معاملة"
                    ),
                ),
                (
                    "total_debits",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="إجمالي المدين",
                    ),
                ),
                (
                    "total_credits",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="إجمالي الدائن",
                    ),
                ),
                (
                    "transactions_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="عدد المعاملات"
                    ),
                ),
                ("is_valid", models.BooleanField(default=True, verbose_name="صالح")),
                (
                    "needs_refresh",
                    models.BooleanField(default=False, verbose_name="يحتاج تحديث"),
                ),
            ],
            options={
                "verbose_name": "كاش رصيد الحساب",
                "verbose_name_plural": "كاش أرصدة الحسابات",
            },
        ),
        migrations.CreateModel(
            name="BalanceAuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("calculate", "حساب"),
                            ("update", "تحديث"),
                            ("invalidate", "إبطال"),
                            ("refresh", "تحديث"),
                            ("snapshot", "لقطة"),
                        ],
                        max_length=20,
                        verbose_name="الإجراء",
                    ),
                ),
                (
                    "old_balance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=15,
                        null=True,
                        verbose_name="الرصيد القديم",
                    ),
                ),
                (
                    "new_balance",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="الرصيد الجديد"
                    ),
                ),
                (
                    "transaction_id",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="معرف المعاملة"
                    ),
                ),
                (
                    "journal_entry_id",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="معرف القيد"
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="الوقت"),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="ملاحظات"),
                ),
                (
                    "system_generated",
                    models.BooleanField(
                        default=True, verbose_name="مولد بواسطة النظام"
                    ),
                ),
            ],
            options={
                "verbose_name": "سجل مراجعة الرصيد",
                "verbose_name_plural": "سجلات مراجعة الأرصدة",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="BalanceReconciliation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reconciliation_date", models.DateField(verbose_name="تاريخ التسوية")),
                (
                    "system_balance",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="رصيد النظام"
                    ),
                ),
                (
                    "calculated_balance",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="الرصيد المحسوب"
                    ),
                ),
                (
                    "external_balance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=15,
                        null=True,
                        verbose_name="الرصيد الخارجي",
                    ),
                ),
                (
                    "system_difference",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="فرق النظام",
                    ),
                ),
                (
                    "external_difference",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=15,
                        null=True,
                        verbose_name="فرق خارجي",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "قيد المراجعة"),
                            ("reconciled", "مسوى"),
                            ("discrepancy", "يوجد فرق"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="الحالة",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="ملاحظات"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
            ],
            options={
                "verbose_name": "تسوية رصيد",
                "verbose_name_plural": "تسويات الأرصدة",
                "ordering": ["-reconciliation_date"],
            },
        ),
        migrations.CreateModel(
            name="BalanceSnapshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("snapshot_date", models.DateField(verbose_name="تاريخ اللقطة")),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="الرصيد"
                    ),
                ),
                (
                    "transactions_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="عدد المعاملات"
                    ),
                ),
                (
                    "last_transaction_id",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="آخر معاملة"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "created_by_system",
                    models.BooleanField(
                        default=True, verbose_name="أنشئ بواسطة النظام"
                    ),
                ),
            ],
            options={
                "verbose_name": "لقطة رصيد",
                "verbose_name_plural": "لقطات الأرصدة",
                "ordering": ["-snapshot_date"],
            },
        ),
        migrations.CreateModel(
            name="JournalEntryTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="اسم القالب")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="الوصف"),
                ),
                (
                    "entry_type",
                    models.CharField(
                        choices=[
                            ("manual", "يدوي"),
                            ("automatic", "تلقائي"),
                            ("adjustment", "تسوية"),
                            ("closing", "إقفال"),
                            ("opening", "افتتاحي"),
                        ],
                        default="manual",
                        max_length=20,
                        verbose_name="نوع القيد",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="نشط")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
            ],
            options={
                "verbose_name": "قالب قيد",
                "verbose_name_plural": "قوالب القيود",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="JournalEntryTemplateLine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "debit",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                        verbose_name="مدين",
                    ),
                ),
                (
                    "credit",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                        verbose_name="دائن",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="البيان"),
                ),
            ],
            options={
                "verbose_name": "بند قالب قيد",
                "verbose_name_plural": "بنود قوالب القيود",
            },
        ),
        migrations.CreateModel(
            name="PaymentSyncError",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "error_type",
                    models.CharField(
                        choices=[
                            ("validation_error", "خطأ في التحقق"),
                            ("database_error", "خطأ في قاعدة البيانات"),
                            ("network_error", "خطأ في الشبكة"),
                            ("permission_error", "خطأ في الصلاحيات"),
                            ("business_logic_error", "خطأ في منطق العمل"),
                            ("system_error", "خطأ في النظام"),
                        ],
                        max_length=20,
                        verbose_name="نوع الخطأ",
                    ),
                ),
                (
                    "error_code",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="كود الخطأ"
                    ),
                ),
                ("error_message", models.TextField(verbose_name="رسالة الخطأ")),
                (
                    "stack_trace",
                    models.TextField(blank=True, null=True, verbose_name="تتبع المكدس"),
                ),
                (
                    "context_data",
                    models.JSONField(default=dict, verbose_name="بيانات السياق"),
                ),
                (
                    "is_resolved",
                    models.BooleanField(default=False, verbose_name="تم الحل"),
                ),
                (
                    "resolution_notes",
                    models.TextField(
                        blank=True, null=True, verbose_name="ملاحظات الحل"
                    ),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الحل"
                    ),
                ),
                (
                    "occurred_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="وقت الحدوث"),
                ),
            ],
            options={
                "verbose_name": "خطأ تزامن دفعة",
                "verbose_name_plural": "أخطاء تزامن المدفوعات",
                "ordering": ["-occurred_at"],
            },
        ),
        migrations.CreateModel(
            name="PaymentSyncLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("create_customer_payment", "إنشاء دفعة عميل"),
                            ("create_supplier_payment", "إنشاء دفعة مورد"),
                            ("update_customer_payment", "تحديث دفعة عميل"),
                            ("update_supplier_payment", "تحديث دفعة مورد"),
                            ("delete_customer_payment", "حذف دفعة عميل"),
                            ("delete_supplier_payment", "حذف دفعة مورد"),
                            ("create_journal_entry", "إنشاء قيد محاسبي"),
                            ("update_balance_cache", "تحديث كاش الرصيد"),
                            ("rollback_operation", "التراجع عن العملية"),
                        ],
                        max_length=30,
                        verbose_name="الإجراء",
                    ),
                ),
                (
                    "target_model",
                    models.CharField(max_length=50, verbose_name="النموذج المستهدف"),
                ),
                (
                    "target_id",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="معرف الهدف"
                    ),
                ),
                (
                    "action_data",
                    models.JSONField(default=dict, verbose_name="بيانات الإجراء"),
                ),
                (
                    "result_data",
                    models.JSONField(default=dict, verbose_name="نتيجة الإجراء"),
                ),
                ("success", models.BooleanField(default=True, verbose_name="نجح")),
                (
                    "error_message",
                    models.TextField(blank=True, null=True, verbose_name="رسالة الخطأ"),
                ),
                (
                    "executed_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="وقت التنفيذ"),
                ),
                (
                    "execution_time",
                    models.FloatField(
                        blank=True, null=True, verbose_name="وقت التنفيذ (ثانية)"
                    ),
                ),
            ],
            options={
                "verbose_name": "سجل تزامن دفعة",
                "verbose_name_plural": "سجلات تزامن المدفوعات",
                "ordering": ["-executed_at"],
            },
        ),
        migrations.CreateModel(
            name="PaymentSyncOperation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "operation_id",
                    models.UUIDField(
                        default=uuid.uuid4, unique=True, verbose_name="معرف العملية"
                    ),
                ),
                (
                    "operation_type",
                    models.CharField(
                        choices=[
                            ("create_payment", "إنشاء دفعة"),
                            ("update_payment", "تحديث دفعة"),
                            ("delete_payment", "حذف دفعة"),
                            ("sync_payment", "مزامنة دفعة"),
                            ("rollback_payment", "التراجع عن دفعة"),
                        ],
                        max_length=20,
                        verbose_name="نوع العملية",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "قيد الانتظار"),
                            ("processing", "قيد المعالجة"),
                            ("completed", "مكتملة"),
                            ("failed", "فاشلة"),
                            ("rolled_back", "تم التراجع"),
                            ("retry", "إعادة المحاولة"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="الحالة",
                    ),
                ),
                ("object_id", models.PositiveIntegerField(verbose_name="معرف الكائن")),
                (
                    "payment_data",
                    models.JSONField(default=dict, verbose_name="بيانات الدفعة"),
                ),
                (
                    "sync_targets",
                    models.JSONField(default=list, verbose_name="أهداف المزامنة"),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="بدء التنفيذ"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="انتهاء التنفيذ"
                    ),
                ),
                (
                    "retry_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="عدد المحاولات"
                    ),
                ),
                (
                    "max_retries",
                    models.PositiveIntegerField(
                        default=3, verbose_name="الحد الأقصى للمحاولات"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, null=True, verbose_name="رسالة الخطأ"),
                ),
                (
                    "error_details",
                    models.JSONField(default=dict, verbose_name="تفاصيل الخطأ"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
            ],
            options={
                "verbose_name": "عملية تزامن دفعة",
                "verbose_name_plural": "عمليات تزامن المدفوعات",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PaymentSyncRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="اسم القاعدة")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="الوصف"),
                ),
                (
                    "source_model",
                    models.CharField(
                        choices=[
                            ("sale_payment", "دفعة مبيعات"),
                            ("purchase_payment", "دفعة مشتريات"),
                            ("customer_payment", "دفعة عميل"),
                            ("supplier_payment", "دفعة مورد"),
                        ],
                        max_length=20,
                        verbose_name="النموذج المصدر",
                    ),
                ),
                (
                    "trigger_event",
                    models.CharField(
                        choices=[
                            ("on_create", "عند الإنشاء"),
                            ("on_update", "عند التحديث"),
                            ("on_delete", "عند الحذف"),
                            ("on_status_change", "عند تغيير الحالة"),
                        ],
                        max_length=20,
                        verbose_name="حدث التشغيل",
                    ),
                ),
                (
                    "sync_to_customer_payment",
                    models.BooleanField(
                        default=False, verbose_name="مزامنة مع دفعات العملاء"
                    ),
                ),
                (
                    "sync_to_supplier_payment",
                    models.BooleanField(
                        default=False, verbose_name="مزامنة مع دفعات الموردين"
                    ),
                ),
                (
                    "sync_to_journal_entry",
                    models.BooleanField(
                        default=False, verbose_name="مزامنة مع القيود المحاسبية"
                    ),
                ),
                (
                    "sync_to_balance_cache",
                    models.BooleanField(
                        default=False, verbose_name="مزامنة مع كاش الأرصدة"
                    ),
                ),
                (
                    "conditions",
                    models.JSONField(default=dict, verbose_name="شروط التزامن"),
                ),
                (
                    "mapping_rules",
                    models.JSONField(default=dict, verbose_name="قواعد الربط"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="نشطة")),
                (
                    "priority",
                    models.PositiveIntegerField(default=1, verbose_name="الأولوية"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
            ],
            options={
                "verbose_name": "قاعدة تزامن دفعة",
                "verbose_name_plural": "قواعد تزامن المدفوعات",
                "ordering": ["priority", "name"],
            },
        ),
        migrations.RemoveField(
            model_name="account",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="account",
            name="parent",
        ),
        migrations.RemoveField(
            model_name="bankreconciliation",
            name="account",
        ),
        migrations.RemoveField(
            model_name="bankreconciliation",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="expense",
            name="account",
        ),
        migrations.RemoveField(
            model_name="expense",
            name="category",
        ),
        migrations.RemoveField(
            model_name="expense",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="expense",
            name="payment_account",
        ),
        migrations.RemoveField(
            model_name="expense",
            name="transaction",
        ),
        migrations.RemoveField(
            model_name="income",
            name="account",
        ),
        migrations.RemoveField(
            model_name="income",
            name="category",
        ),
        migrations.RemoveField(
            model_name="income",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="income",
            name="receiving_account",
        ),
        migrations.RemoveField(
            model_name="income",
            name="transaction",
        ),
        migrations.RemoveField(
            model_name="transaction",
            name="account",
        ),
        migrations.RemoveField(
            model_name="transaction",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="transaction",
            name="to_account",
        ),
        migrations.RemoveField(
            model_name="transactionline",
            name="account",
        ),
        migrations.RemoveField(
            model_name="transactionline",
            name="transaction",
        ),
        migrations.RemoveConstraint(
            model_name="accountingperiod",
            name="unique_accounting_period",
        ),
        migrations.RenameIndex(
            model_name="chartofaccounts",
            new_name="financial_c_code_8cbc99_idx",
            old_name="financial_c_code_idx",
        ),
        migrations.RenameIndex(
            model_name="chartofaccounts",
            new_name="financial_c_account_938ba3_idx",
            old_name="financial_c_account_type_idx",
        ),
        migrations.RenameIndex(
            model_name="chartofaccounts",
            new_name="financial_c_parent__7d1112_idx",
            old_name="financial_c_parent_idx",
        ),
        migrations.RenameIndex(
            model_name="journalentry",
            new_name="financial_j_date_1898e8_idx",
            old_name="financial_j_date_status_idx",
        ),
        migrations.RenameIndex(
            model_name="journalentry",
            new_name="financial_j_number_a4f2ef_idx",
            old_name="financial_j_number_idx",
        ),
        migrations.RenameIndex(
            model_name="journalentry",
            new_name="financial_j_referen_8bd693_idx",
            old_name="financial_j_reference_idx",
        ),
        migrations.RenameIndex(
            model_name="journalentryline",
            new_name="financial_j_account_4e56b0_idx",
            old_name="financial_j_account_entry_idx",
        ),
        migrations.RenameIndex(
            model_name="journalentryline",
            new_name="financial_j_journal_0d4951_idx",
            old_name="financial_j_entry_idx",
        ),
        migrations.AddField(
            model_name="chartofaccounts",
            name="opening_balance",
            field=models.DecimalField(
                decimal_places=2,
                default=0.0,
                help_text="الرصيد الافتتاحي للحساب",
                max_digits=15,
                verbose_name="الرصيد الافتتاحي",
            ),
        ),
        migrations.AddField(
            model_name="chartofaccounts",
            name="opening_balance_date",
            field=models.DateField(
                blank=True,
                help_text="تاريخ الرصيد الافتتاحي",
                null=True,
                verbose_name="تاريخ الرصيد الافتتاحي",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="accountingperiod",
            unique_together={("start_date", "end_date")},
        ),
        migrations.DeleteModel(
            name="Account",
        ),
        migrations.DeleteModel(
            name="BankReconciliation",
        ),
        migrations.DeleteModel(
            name="Category",
        ),
        migrations.DeleteModel(
            name="Expense",
        ),
        migrations.DeleteModel(
            name="Income",
        ),
        migrations.DeleteModel(
            name="Transaction",
        ),
        migrations.DeleteModel(
            name="TransactionLine",
        ),
        migrations.AddField(
            model_name="paymentsyncrule",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="payment_sync_rules",
                to=settings.AUTH_USER_MODEL,
                verbose_name="أنشئ بواسطة",
            ),
        ),
        migrations.AddField(
            model_name="paymentsyncoperation",
            name="content_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="contenttypes.contenttype",
                verbose_name="نوع الكائن",
            ),
        ),
        migrations.AddField(
            model_name="paymentsyncoperation",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="payment_sync_operations",
                to=settings.AUTH_USER_MODEL,
                verbose_name="أنشئ بواسطة",
            ),
        ),
        migrations.AddField(
            model_name="paymentsynclog",
            name="sync_operation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="logs",
                to="financial.paymentsyncoperation",
                verbose_name="عملية التزامن",
            ),
        ),
        migrations.AddField(
            model_name="paymentsyncerror",
            name="resolved_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="resolved_sync_errors",
                to=settings.AUTH_USER_MODEL,
                verbose_name="حل بواسطة",
            ),
        ),
        migrations.AddField(
            model_name="paymentsyncerror",
            name="sync_operation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="errors",
                to="financial.paymentsyncoperation",
                verbose_name="عملية التزامن",
            ),
        ),
        migrations.AddField(
            model_name="journalentrytemplateline",
            name="account",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="template_lines",
                to="financial.chartofaccounts",
                verbose_name="الحساب",
            ),
        ),
        migrations.AddField(
            model_name="journalentrytemplateline",
            name="template",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="lines",
                to="financial.journalentrytemplate",
                verbose_name="القالب",
            ),
        ),
        migrations.AddField(
            model_name="journalentrytemplate",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="entry_templates_created",
                to=settings.AUTH_USER_MODEL,
                verbose_name="أنشئ بواسطة",
            ),
        ),
        migrations.AddField(
            model_name="balancesnapshot",
            name="account",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="balance_snapshots",
                to="financial.chartofaccounts",
                verbose_name="الحساب",
            ),
        ),
        migrations.AddField(
            model_name="balancereconciliation",
            name="account",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reconciliations",
                to="financial.chartofaccounts",
                verbose_name="الحساب",
            ),
        ),
        migrations.AddField(
            model_name="balancereconciliation",
            name="reconciled_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="سوى بواسطة",
            ),
        ),
        migrations.AddField(
            model_name="balanceauditlog",
            name="account",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="balance_audit_logs",
                to="financial.chartofaccounts",
                verbose_name="الحساب",
            ),
        ),
        migrations.AddField(
            model_name="balanceauditlog",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="المستخدم",
            ),
        ),
        migrations.AddField(
            model_name="accountbalancecache",
            name="account",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="balance_cache",
                to="financial.chartofaccounts",
                verbose_name="الحساب",
            ),
        ),
        migrations.AddIndex(
            model_name="paymentsyncrule",
            index=models.Index(
                fields=["source_model", "trigger_event"],
                name="financial_p_source__b1b82a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="paymentsyncrule",
            index=models.Index(
                fields=["is_active", "priority"], name="financial_p_is_acti_6ff8af_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paymentsyncoperation",
            index=models.Index(
                fields=["operation_id"], name="financial_p_operati_1e4744_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paymentsyncoperation",
            index=models.Index(
                fields=["status", "created_at"], name="financial_p_status_e96d49_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paymentsyncoperation",
            index=models.Index(
                fields=["content_type", "object_id"],
                name="financial_p_content_4b77fc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="paymentsynclog",
            index=models.Index(
                fields=["sync_operation", "executed_at"],
                name="financial_p_sync_op_29c8a3_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="paymentsynclog",
            index=models.Index(
                fields=["action", "success"], name="financial_p_action_0f81e4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paymentsyncerror",
            index=models.Index(
                fields=["sync_operation", "occurred_at"],
                name="financial_p_sync_op_c7336e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="paymentsyncerror",
            index=models.Index(
                fields=["error_type", "is_resolved"],
                name="financial_p_error_t_bb298b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="balancesnapshot",
            index=models.Index(
                fields=["account", "snapshot_date"],
                name="financial_b_account_9b3132_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="balancesnapshot",
            index=models.Index(
                fields=["snapshot_date"], name="financial_b_snapsho_37b4d9_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="balancesnapshot",
            unique_together={("account", "snapshot_date")},
        ),
        migrations.AddIndex(
            model_name="balancereconciliation",
            index=models.Index(
                fields=["account", "reconciliation_date"],
                name="financial_b_account_52ce37_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="balancereconciliation",
            index=models.Index(
                fields=["status", "reconciliation_date"],
                name="financial_b_status_f45fa2_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="balancereconciliation",
            unique_together={("account", "reconciliation_date")},
        ),
        migrations.AddIndex(
            model_name="balanceauditlog",
            index=models.Index(
                fields=["account", "timestamp"], name="financial_b_account_44e5a0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="balanceauditlog",
            index=models.Index(
                fields=["action", "timestamp"], name="financial_b_action_6958e6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="accountbalancecache",
            index=models.Index(
                fields=["last_updated"], name="financial_a_last_up_50f0c8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="accountbalancecache",
            index=models.Index(
                fields=["is_valid", "needs_refresh"],
                name="financial_a_is_vali_679702_idx",
            ),
        ),
    ]
