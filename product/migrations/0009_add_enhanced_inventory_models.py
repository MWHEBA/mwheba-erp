# Generated by Django 4.2.23 on 2025-10-06 09:44

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("supplier", "0004_supplier_financial_account"),
        ("financial", "0016_add_audit_trail_model"),
        ("product", "0008_update_product_image_model"),
    ]

    operations = [
        migrations.CreateModel(
            name="InventoryAdjustment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "adjustment_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        unique=True,
                        verbose_name="رقم التسوية",
                    ),
                ),
                (
                    "adjustment_type",
                    models.CharField(
                        choices=[
                            ("physical_count", "جرد فعلي"),
                            ("damage", "تلف"),
                            ("expiry", "انتهاء صلاحية"),
                            ("theft", "سرقة"),
                            ("loss", "فقدان"),
                            ("found", "عثور"),
                            ("correction", "تصحيح"),
                            ("other", "أخرى"),
                        ],
                        default="physical_count",
                        max_length=20,
                        verbose_name="نوع التسوية",
                    ),
                ),
                (
                    "adjustment_date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="تاريخ التسوية"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "مسودة"),
                            ("pending", "معلق"),
                            ("approved", "معتمد"),
                            ("cancelled", "ملغي"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="الحالة",
                    ),
                ),
                ("reason", models.TextField(verbose_name="سبب التسوية")),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="ملاحظات"),
                ),
                (
                    "total_items",
                    models.PositiveIntegerField(
                        default=0, verbose_name="إجمالي الأصناف"
                    ),
                ),
                (
                    "total_quantity_difference",
                    models.IntegerField(default=0, verbose_name="إجمالي فرق الكمية"),
                ),
                (
                    "total_value_difference",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=15,
                        verbose_name="إجمالي فرق القيمة",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "approval_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الموافقة"
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="adjustments_approved",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="وافق عليه",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="adjustments_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="product.warehouse",
                        verbose_name="المخزن",
                    ),
                ),
            ],
            options={
                "verbose_name": "تسوية مخزون",
                "verbose_name_plural": "تسويات المخزون",
                "ordering": ["-adjustment_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="InventoryMovement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "movement_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        unique=True,
                        verbose_name="رقم الحركة",
                    ),
                ),
                (
                    "movement_type",
                    models.CharField(
                        choices=[
                            ("in", "وارد"),
                            ("out", "صادر"),
                            ("transfer_out", "تحويل صادر"),
                            ("transfer_in", "تحويل وارد"),
                            ("adjustment_in", "تسوية زيادة"),
                            ("adjustment_out", "تسوية نقص"),
                            ("return_in", "مرتجع وارد"),
                            ("return_out", "مرتجع صادر"),
                            ("damaged", "تالف"),
                            ("expired", "منتهي الصلاحية"),
                            ("lost", "مفقود"),
                            ("found", "موجود"),
                        ],
                        max_length=20,
                        verbose_name="نوع الحركة",
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("purchase", "شراء"),
                            ("sale", "بيع"),
                            ("transfer", "تحويل"),
                            ("adjustment", "تسوية"),
                            ("return", "مرتجع"),
                            ("damage", "إتلاف"),
                            ("opening", "رصيد افتتاحي"),
                            ("manual", "يدوي"),
                        ],
                        default="manual",
                        max_length=20,
                        verbose_name="نوع المستند",
                    ),
                ),
                (
                    "document_number",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="رقم المستند"
                    ),
                ),
                ("quantity", models.PositiveIntegerField(verbose_name="الكمية")),
                (
                    "unit_cost",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="تكلفة الوحدة",
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="التكلفة الإجمالية",
                    ),
                ),
                (
                    "quantity_before",
                    models.PositiveIntegerField(
                        default=0, verbose_name="الكمية قبل الحركة"
                    ),
                ),
                (
                    "quantity_after",
                    models.PositiveIntegerField(
                        default=0, verbose_name="الكمية بعد الحركة"
                    ),
                ),
                (
                    "average_cost_before",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        verbose_name="متوسط التكلفة قبل",
                    ),
                ),
                (
                    "average_cost_after",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        verbose_name="متوسط التكلفة بعد",
                    ),
                ),
                (
                    "batch_number",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="رقم الدفعة"
                    ),
                ),
                (
                    "expiry_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="تاريخ انتهاء الصلاحية"
                    ),
                ),
                (
                    "location_code",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="كود الموقع"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="ملاحظات"),
                ),
                (
                    "movement_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="تاريخ الحركة"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "approval_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الموافقة"
                    ),
                ),
                (
                    "is_approved",
                    models.BooleanField(default=False, verbose_name="معتمد"),
                ),
                (
                    "is_reversed",
                    models.BooleanField(default=False, verbose_name="معكوس"),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="inventory_movements_approved",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="وافق عليه",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="inventory_movements_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
                (
                    "journal_entry",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="inventory_movements",
                        to="financial.journalentry",
                        verbose_name="القيد المحاسبي",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="inventory_movements",
                        to="product.product",
                        verbose_name="المنتج",
                    ),
                ),
                (
                    "reference_movement",
                    models.ForeignKey(
                        blank=True,
                        help_text="الحركة المرتبطة (مثل التحويل المقابل)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="related_movements",
                        to="product.inventorymovement",
                        verbose_name="الحركة المرجعية",
                    ),
                ),
                (
                    "reversal_movement",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="original_movement",
                        to="product.inventorymovement",
                        verbose_name="حركة العكس",
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="inventory_movements",
                        to="product.warehouse",
                        verbose_name="المخزن",
                    ),
                ),
            ],
            options={
                "verbose_name": "حركة مخزون",
                "verbose_name_plural": "حركات المخزون",
                "ordering": ["-movement_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LocationAisle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="اسم الممر")),
                ("code", models.CharField(max_length=10, verbose_name="كود الممر")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="الوصف"),
                ),
                (
                    "sequence",
                    models.PositiveIntegerField(default=1, verbose_name="الترتيب"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="نشط")),
            ],
            options={
                "verbose_name": "ممر",
                "verbose_name_plural": "الممرات",
                "ordering": ["zone", "sequence", "name"],
            },
        ),
        migrations.CreateModel(
            name="LocationShelf",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="اسم الرف")),
                ("code", models.CharField(max_length=10, verbose_name="كود الرف")),
                (
                    "levels",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="عدد المستويات",
                    ),
                ),
                (
                    "max_weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="بالكيلوجرام",
                        max_digits=10,
                        null=True,
                        verbose_name="الحد الأقصى للوزن",
                    ),
                ),
                (
                    "max_volume",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="بالمتر المكعب",
                        max_digits=10,
                        null=True,
                        verbose_name="الحد الأقصى للحجم",
                    ),
                ),
                (
                    "sequence",
                    models.PositiveIntegerField(default=1, verbose_name="الترتيب"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="نشط")),
                (
                    "aisle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shelves",
                        to="product.locationaisle",
                        verbose_name="الممر",
                    ),
                ),
            ],
            options={
                "verbose_name": "رف",
                "verbose_name_plural": "الأرفف",
                "ordering": ["aisle", "sequence", "name"],
            },
        ),
        migrations.CreateModel(
            name="StockReservation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reservation_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        unique=True,
                        verbose_name="معرف الحجز",
                    ),
                ),
                (
                    "quantity_reserved",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="الكمية المحجوزة",
                    ),
                ),
                (
                    "quantity_fulfilled",
                    models.PositiveIntegerField(
                        default=0, verbose_name="الكمية المُنفذة"
                    ),
                ),
                (
                    "reservation_type",
                    models.CharField(
                        choices=[
                            ("sale_order", "طلب مبيعات"),
                            ("purchase_order", "طلب شراء"),
                            ("transfer_order", "طلب تحويل"),
                            ("manual", "حجز يدوي"),
                        ],
                        default="manual",
                        max_length=20,
                        verbose_name="نوع الحجز",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "نشط"),
                            ("fulfilled", "مُنفذ"),
                            ("cancelled", "ملغي"),
                            ("expired", "منتهي الصلاحية"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="حالة الحجز",
                    ),
                ),
                (
                    "sale_order_id",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="رقم طلب المبيعات"
                    ),
                ),
                (
                    "purchase_order_id",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="رقم طلب الشراء"
                    ),
                ),
                (
                    "reference_number",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="رقم المرجع"
                    ),
                ),
                (
                    "reserved_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="تاريخ الحجز"),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="الحجز سينتهي تلقائياً في هذا التاريخ",
                        null=True,
                        verbose_name="تاريخ انتهاء الحجز",
                    ),
                ),
                (
                    "fulfilled_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ التنفيذ"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="ملاحظات"),
                ),
                (
                    "priority",
                    models.PositiveIntegerField(
                        default=5,
                        help_text="1 = أولوية عالية، 10 = أولوية منخفضة",
                        verbose_name="الأولوية",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ آخر تحديث"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservations",
                        to="product.product",
                        verbose_name="المنتج",
                    ),
                ),
                (
                    "reserved_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="stock_reservations_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="محجوز بواسطة",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="stock_reservations_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="آخر تحديث بواسطة",
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservations",
                        to="product.warehouse",
                        verbose_name="المستودع",
                    ),
                ),
            ],
            options={
                "verbose_name": "حجز مخزون",
                "verbose_name_plural": "حجوزات المخزون",
                "ordering": ["-reserved_at"],
            },
        ),
        migrations.CreateModel(
            name="ReservationRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="اسم القاعدة")),
                (
                    "rule_type",
                    models.CharField(
                        choices=[
                            ("auto_reserve_on_order", "حجز تلقائي عند الطلب"),
                            ("auto_expire_after_days", "انتهاء صلاحية تلقائي"),
                            ("priority_based_allocation", "تخصيص حسب الأولوية"),
                        ],
                        max_length=30,
                        verbose_name="نوع القاعدة",
                    ),
                ),
                (
                    "auto_reserve_enabled",
                    models.BooleanField(
                        default=False, verbose_name="تفعيل الحجز التلقائي"
                    ),
                ),
                (
                    "default_expiry_days",
                    models.PositiveIntegerField(
                        default=7,
                        help_text="عدد الأيام قبل انتهاء صلاحية الحجز",
                        verbose_name="أيام انتهاء الصلاحية الافتراضية",
                    ),
                ),
                (
                    "max_reservation_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("80.00"),
                        help_text="أقصى نسبة يمكن حجزها من المخزون المتاح",
                        max_digits=5,
                        verbose_name="أقصى نسبة حجز من المخزون",
                    ),
                ),
                (
                    "priority_threshold",
                    models.PositiveIntegerField(
                        default=5,
                        help_text="الحجوزات بأولوية أقل من هذا الرقم لها أولوية عالية",
                        verbose_name="عتبة الأولوية",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="نشط")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
                (
                    "product_category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="product.category",
                        verbose_name="فئة المنتج",
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="product.warehouse",
                        verbose_name="المستودع",
                    ),
                ),
            ],
            options={
                "verbose_name": "قاعدة حجز",
                "verbose_name_plural": "قواعد الحجز",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ReservationFulfillment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity_fulfilled",
                    models.PositiveIntegerField(
                        default=0, verbose_name="الكمية المُنفذة"
                    ),
                ),
                (
                    "fulfilled_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ التنفيذ"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="ملاحظات"),
                ),
                (
                    "fulfilled_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="نُفذ بواسطة",
                    ),
                ),
                (
                    "inventory_movement",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="product.inventorymovement",
                        verbose_name="حركة المخزون المرتبطة",
                    ),
                ),
                (
                    "reservation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fulfillments",
                        to="product.stockreservation",
                        verbose_name="الحجز",
                    ),
                ),
            ],
            options={
                "verbose_name": "سجل تنفيذ الحجز",
                "verbose_name_plural": "سجلات تنفيذ الحجوزات",
                "ordering": ["-fulfilled_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductStock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=0, verbose_name="الكمية المتاحة"
                    ),
                ),
                (
                    "reserved_quantity",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="الكمية المحجوزة للطلبات المعلقة",
                        verbose_name="الكمية المحجوزة",
                    ),
                ),
                (
                    "average_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="متوسط التكلفة",
                    ),
                ),
                (
                    "last_movement_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ آخر حركة"
                    ),
                ),
                (
                    "min_stock_level",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="الحد الأدنى المطلوب في هذا المخزن",
                        verbose_name="الحد الأدنى للمخزون",
                    ),
                ),
                (
                    "max_stock_level",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="الحد الأقصى المسموح في هذا المخزن",
                        verbose_name="الحد الأقصى للمخزون",
                    ),
                ),
                (
                    "location_code",
                    models.CharField(
                        blank=True,
                        help_text="كود موقع المنتج داخل المخزن (مثل: A1-B2)",
                        max_length=50,
                        null=True,
                        verbose_name="كود الموقع",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="نشط")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ التحديث"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_stocks",
                        to="product.product",
                        verbose_name="المنتج",
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_stocks",
                        to="product.warehouse",
                        verbose_name="المخزن",
                    ),
                ),
            ],
            options={
                "verbose_name": "مخزون منتج",
                "verbose_name_plural": "مخزون المنتجات",
                "ordering": ["warehouse", "product"],
            },
        ),
        migrations.CreateModel(
            name="ProductLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "level",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="المستوى",
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True,
                        help_text="مثل: A1, B2, إلخ",
                        max_length=10,
                        null=True,
                        verbose_name="الموضع",
                    ),
                ),
                (
                    "location_type",
                    models.CharField(
                        choices=[
                            ("primary", "موقع رئيسي"),
                            ("secondary", "موقع ثانوي"),
                            ("overflow", "موقع إضافي"),
                            ("picking", "موقع انتقاء"),
                            ("reserve", "موقع احتياطي"),
                        ],
                        default="primary",
                        max_length=20,
                        verbose_name="نوع الموقع",
                    ),
                ),
                (
                    "current_quantity",
                    models.PositiveIntegerField(
                        default=0, verbose_name="الكمية الحالية"
                    ),
                ),
                (
                    "max_quantity",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="الحد الأقصى للكمية"
                    ),
                ),
                (
                    "min_quantity",
                    models.PositiveIntegerField(
                        default=0, verbose_name="الحد الأدنى للكمية"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="ملاحظات"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="نشط")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ آخر تحديث"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="locations",
                        to="product.product",
                        verbose_name="المنتج",
                    ),
                ),
                (
                    "shelf",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_locations",
                        to="product.locationshelf",
                        verbose_name="الرف",
                    ),
                ),
            ],
            options={
                "verbose_name": "موقع منتج",
                "verbose_name_plural": "مواقع المنتجات",
                "ordering": ["product", "location_type", "shelf"],
            },
        ),
        migrations.CreateModel(
            name="ProductBatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "batch_number",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="رقم الدفعة"
                    ),
                ),
                (
                    "initial_quantity",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="الكمية الأولية",
                    ),
                ),
                (
                    "current_quantity",
                    models.PositiveIntegerField(
                        default=0, verbose_name="الكمية الحالية"
                    ),
                ),
                (
                    "reserved_quantity",
                    models.PositiveIntegerField(
                        default=0, verbose_name="الكمية المحجوزة"
                    ),
                ),
                (
                    "production_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="تاريخ الإنتاج"
                    ),
                ),
                (
                    "expiry_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="تاريخ انتهاء الصلاحية"
                    ),
                ),
                (
                    "received_date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="تاريخ الاستلام"
                    ),
                ),
                (
                    "unit_cost",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="تكلفة الوحدة",
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="التكلفة الإجمالية",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "نشط"),
                            ("expired", "منتهي الصلاحية"),
                            ("recalled", "مسحوب"),
                            ("damaged", "تالف"),
                            ("sold_out", "نفد"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="حالة الدفعة",
                    ),
                ),
                (
                    "supplier_batch_number",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="رقم دفعة المورد",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="ملاحظات"),
                ),
                (
                    "location_code",
                    models.CharField(
                        blank=True,
                        help_text="موقع الدفعة داخل المستودع",
                        max_length=50,
                        null=True,
                        verbose_name="كود الموقع",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="تاريخ آخر تحديث"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="product_batches_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="batches",
                        to="product.product",
                        verbose_name="المنتج",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="supplier.supplier",
                        verbose_name="المورد",
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_batches",
                        to="product.warehouse",
                        verbose_name="المستودع",
                    ),
                ),
            ],
            options={
                "verbose_name": "دفعة منتج",
                "verbose_name_plural": "دفعات المنتجات",
                "ordering": ["expiry_date", "batch_number"],
            },
        ),
        migrations.CreateModel(
            name="LocationZone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="اسم المنطقة")),
                ("code", models.CharField(max_length=20, verbose_name="كود المنطقة")),
                (
                    "zone_type",
                    models.CharField(
                        choices=[
                            ("normal", "عادي"),
                            ("cold", "تبريد"),
                            ("frozen", "تجميد"),
                            ("hazardous", "مواد خطرة"),
                            ("fragile", "مواد قابلة للكسر"),
                            ("high_value", "عالي القيمة"),
                        ],
                        default="normal",
                        max_length=20,
                        verbose_name="نوع المنطقة",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="الوصف"),
                ),
                (
                    "temperature_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="بالدرجة المئوية",
                        max_digits=5,
                        null=True,
                        verbose_name="الحد الأدنى لدرجة الحرارة",
                    ),
                ),
                (
                    "temperature_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="بالدرجة المئوية",
                        max_digits=5,
                        null=True,
                        verbose_name="الحد الأقصى لدرجة الحرارة",
                    ),
                ),
                (
                    "humidity_max",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="بالنسبة المئوية",
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(100)],
                        verbose_name="الحد الأقصى للرطوبة",
                    ),
                ),
                (
                    "requires_authorization",
                    models.BooleanField(default=False, verbose_name="يتطلب تصريح"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="نشط")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "authorized_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="authorized_zones",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="المستخدمون المصرح لهم",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="zones",
                        to="product.warehouse",
                        verbose_name="المستودع",
                    ),
                ),
            ],
            options={
                "verbose_name": "منطقة مستودع",
                "verbose_name_plural": "مناطق المستودعات",
                "ordering": ["warehouse", "name"],
            },
        ),
        migrations.CreateModel(
            name="LocationTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "task_type",
                    models.CharField(
                        choices=[
                            ("restock", "إعادة تخزين"),
                            ("pick", "انتقاء"),
                            ("move", "نقل"),
                            ("count", "جرد"),
                            ("clean", "تنظيف"),
                            ("maintenance", "صيانة"),
                        ],
                        max_length=20,
                        verbose_name="نوع المهمة",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=200, verbose_name="عنوان المهمة"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="الوصف"),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="الكمية"
                    ),
                ),
                (
                    "priority",
                    models.PositiveIntegerField(
                        choices=[(1, "عاجل"), (2, "عالي"), (3, "متوسط"), (4, "منخفض")],
                        default=3,
                        verbose_name="الأولوية",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "معلق"),
                            ("assigned", "مُعين"),
                            ("in_progress", "قيد التنفيذ"),
                            ("completed", "مكتمل"),
                            ("cancelled", "ملغي"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="الحالة",
                    ),
                ),
                (
                    "due_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الاستحقاق"
                    ),
                ),
                (
                    "assigned_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ التعيين"
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ البدء"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الإكمال"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="location_tasks_assigned",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="مُعين إلى",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="location_tasks_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="product.productlocation",
                        verbose_name="الموقع",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="product.product",
                        verbose_name="المنتج",
                    ),
                ),
            ],
            options={
                "verbose_name": "مهمة موقع",
                "verbose_name_plural": "مهام المواقع",
                "ordering": ["priority", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LocationMovement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "movement_type",
                    models.CharField(
                        choices=[
                            ("move", "نقل"),
                            ("restock", "إعادة تخزين"),
                            ("pick", "انتقاء"),
                            ("cycle_count", "جرد دوري"),
                            ("adjustment", "تسوية"),
                        ],
                        max_length=20,
                        verbose_name="نوع الحركة",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(verbose_name="الكمية")),
                (
                    "reason",
                    models.TextField(blank=True, null=True, verbose_name="السبب"),
                ),
                (
                    "moved_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="تاريخ النقل"),
                ),
                (
                    "from_location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="movements_from",
                        to="product.productlocation",
                        verbose_name="من الموقع",
                    ),
                ),
                (
                    "inventory_movement",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="product.inventorymovement",
                        verbose_name="حركة المخزون المرتبطة",
                    ),
                ),
                (
                    "moved_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="نُقل بواسطة",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="location_movements",
                        to="product.product",
                        verbose_name="المنتج",
                    ),
                ),
                (
                    "to_location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="movements_to",
                        to="product.productlocation",
                        verbose_name="إلى الموقع",
                    ),
                ),
            ],
            options={
                "verbose_name": "حركة موقع",
                "verbose_name_plural": "حركات المواقع",
                "ordering": ["-moved_at"],
            },
        ),
        migrations.AddField(
            model_name="locationaisle",
            name="zone",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="aisles",
                to="product.locationzone",
                verbose_name="المنطقة",
            ),
        ),
        migrations.CreateModel(
            name="InventoryAdjustmentItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "system_quantity",
                    models.PositiveIntegerField(
                        help_text="الكمية حسب النظام", verbose_name="الكمية النظرية"
                    ),
                ),
                (
                    "actual_quantity",
                    models.PositiveIntegerField(
                        help_text="الكمية المعدودة فعلياً",
                        verbose_name="الكمية الفعلية",
                    ),
                ),
                (
                    "quantity_difference",
                    models.IntegerField(
                        help_text="الفرق بين الفعلي والنظري", verbose_name="فرق الكمية"
                    ),
                ),
                (
                    "unit_cost",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="تكلفة الوحدة"
                    ),
                ),
                (
                    "value_difference",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="فرق القيمة"
                    ),
                ),
                (
                    "reason",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="السبب"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="ملاحظات"),
                ),
                ("is_applied", models.BooleanField(default=False, verbose_name="مطبق")),
                (
                    "adjustment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="adjustment_items",
                        to="product.inventoryadjustment",
                        verbose_name="التسوية",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="product.product",
                        verbose_name="المنتج",
                    ),
                ),
            ],
            options={
                "verbose_name": "بند تسوية مخزون",
                "verbose_name_plural": "بنود تسوية المخزون",
            },
        ),
        migrations.CreateModel(
            name="ExpiryRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="اسم القاعدة")),
                (
                    "warning_days",
                    models.PositiveIntegerField(
                        default=30,
                        help_text="عدد الأيام قبل انتهاء الصلاحية لإرسال تحذير",
                        verbose_name="أيام التحذير",
                    ),
                ),
                (
                    "critical_days",
                    models.PositiveIntegerField(
                        default=7,
                        help_text="عدد الأيام قبل انتهاء الصلاحية لإرسال تنبيه حرج",
                        verbose_name="أيام الحالة الحرجة",
                    ),
                ),
                (
                    "auto_block_expired",
                    models.BooleanField(
                        default=True,
                        verbose_name="حظر المنتجات المنتهية الصلاحية تلقائياً",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="نشط")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="expiry_rules_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
                (
                    "notify_users",
                    models.ManyToManyField(
                        blank=True,
                        help_text="المستخدمون الذين سيتلقون التنبيهات",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="المستخدمون المُنبهون",
                    ),
                ),
                (
                    "product_category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="product.category",
                        verbose_name="فئة المنتج",
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="product.warehouse",
                        verbose_name="المستودع",
                    ),
                ),
            ],
            options={
                "verbose_name": "قاعدة تنبيه انتهاء الصلاحية",
                "verbose_name_plural": "قواعد تنبيهات انتهاء الصلاحية",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ExpiryAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("near_expiry", "قريب من انتهاء الصلاحية"),
                            ("expired", "منتهي الصلاحية"),
                            ("critical", "حرج"),
                        ],
                        max_length=20,
                        verbose_name="نوع التنبيه",
                    ),
                ),
                (
                    "alert_date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="تاريخ التنبيه"
                    ),
                ),
                (
                    "days_to_expiry",
                    models.IntegerField(verbose_name="أيام حتى انتهاء الصلاحية"),
                ),
                (
                    "is_acknowledged",
                    models.BooleanField(default=False, verbose_name="تم الاطلاع"),
                ),
                (
                    "acknowledged_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الاطلاع"
                    ),
                ),
                (
                    "action_taken",
                    models.TextField(
                        blank=True, null=True, verbose_name="الإجراء المتخذ"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الإنشاء"
                    ),
                ),
                (
                    "acknowledged_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="اطلع عليه",
                    ),
                ),
                (
                    "batch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="expiry_alerts",
                        to="product.productbatch",
                        verbose_name="الدفعة",
                    ),
                ),
            ],
            options={
                "verbose_name": "تنبيه انتهاء الصلاحية",
                "verbose_name_plural": "تنبيهات انتهاء الصلاحية",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BatchReservation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity_reserved",
                    models.IntegerField(
                        help_text="كمية موجبة للحجز، سالبة لإلغاء الحجز",
                        verbose_name="الكمية المحجوزة",
                    ),
                ),
                (
                    "reservation_reference",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="مرجع الحجز"
                    ),
                ),
                (
                    "reserved_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="تاريخ الحجز"),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="ملاحظات"),
                ),
                (
                    "batch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservations",
                        to="product.productbatch",
                        verbose_name="الدفعة",
                    ),
                ),
            ],
            options={
                "verbose_name": "سجل حجز الدفعة",
                "verbose_name_plural": "سجلات حجز الدفعات",
                "ordering": ["-reserved_at"],
            },
        ),
        migrations.CreateModel(
            name="BatchConsumption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity_consumed",
                    models.PositiveIntegerField(verbose_name="الكمية المستهلكة"),
                ),
                (
                    "consumed_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ الاستهلاك"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="ملاحظات"),
                ),
                (
                    "batch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consumptions",
                        to="product.productbatch",
                        verbose_name="الدفعة",
                    ),
                ),
                (
                    "consumed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="استُهلك بواسطة",
                    ),
                ),
                (
                    "inventory_movement",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="product.inventorymovement",
                        verbose_name="حركة المخزون المرتبطة",
                    ),
                ),
            ],
            options={
                "verbose_name": "سجل استهلاك الدفعة",
                "verbose_name_plural": "سجلات استهلاك الدفعات",
                "ordering": ["-consumed_at"],
            },
        ),
        migrations.CreateModel(
            name="StockTransfer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transfer_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        unique=True,
                        verbose_name="رقم التحويل",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(verbose_name="الكمية")),
                (
                    "transfer_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="تكلفة التحويل",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "مسودة"),
                            ("pending", "معلق"),
                            ("in_transit", "في الطريق"),
                            ("completed", "مكتمل"),
                            ("cancelled", "ملغي"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="الحالة",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="ملاحظات"),
                ),
                (
                    "request_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="تاريخ الطلب"),
                ),
                (
                    "approval_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الموافقة"
                    ),
                ),
                (
                    "ship_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الشحن"
                    ),
                ),
                (
                    "receive_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الاستلام"
                    ),
                ),
                (
                    "expected_arrival",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="تاريخ الوصول المتوقع"
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_transfers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="وافق عليه",
                    ),
                ),
                (
                    "from_warehouse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transfers_out",
                        to="product.warehouse",
                        verbose_name="من المخزن",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transfers",
                        to="product.product",
                        verbose_name="المنتج",
                    ),
                ),
                (
                    "received_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="received_transfers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="استلم بواسطة",
                    ),
                ),
                (
                    "requested_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="requested_transfers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="طلب بواسطة",
                    ),
                ),
                (
                    "shipped_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="shipped_transfers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="شحن بواسطة",
                    ),
                ),
                (
                    "to_warehouse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transfers_in",
                        to="product.warehouse",
                        verbose_name="إلى المخزن",
                    ),
                ),
            ],
            options={
                "verbose_name": "تحويل مخزون",
                "verbose_name_plural": "تحويلات المخزون",
                "ordering": ["-request_date"],
                "indexes": [
                    models.Index(
                        fields=["from_warehouse", "to_warehouse"],
                        name="product_sto_from_wa_90e6a6_idx",
                    ),
                    models.Index(
                        fields=["status", "request_date"],
                        name="product_sto_status_ddf03b_idx",
                    ),
                    models.Index(
                        fields=["product"], name="product_sto_product_46ecab_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="StockSnapshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "snapshot_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="تاريخ اللقطة"
                    ),
                ),
                ("quantity", models.PositiveIntegerField(verbose_name="الكمية")),
                (
                    "average_cost",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="متوسط التكلفة"
                    ),
                ),
                (
                    "total_value",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="القيمة الإجمالية"
                    ),
                ),
                (
                    "snapshot_type",
                    models.CharField(
                        choices=[
                            ("daily", "يومية"),
                            ("monthly", "شهرية"),
                            ("yearly", "سنوية"),
                            ("manual", "يدوية"),
                        ],
                        default="daily",
                        max_length=20,
                        verbose_name="نوع اللقطة",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="أنشئ بواسطة",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="product.product",
                        verbose_name="المنتج",
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="product.warehouse",
                        verbose_name="المخزن",
                    ),
                ),
            ],
            options={
                "verbose_name": "لقطة مخزون",
                "verbose_name_plural": "لقطات المخزون",
                "ordering": ["-snapshot_date"],
                "indexes": [
                    models.Index(
                        fields=["snapshot_date", "warehouse"],
                        name="product_sto_snapsho_3cd877_idx",
                    ),
                    models.Index(
                        fields=["product", "snapshot_date"],
                        name="product_sto_product_ce603a_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="stockreservation",
            index=models.Index(
                fields=["product", "warehouse", "status"],
                name="product_sto_product_78df27_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="stockreservation",
            index=models.Index(
                fields=["status", "expires_at"], name="product_sto_status_44552b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stockreservation",
            index=models.Index(
                fields=["reservation_type", "status"],
                name="product_sto_reserva_ba7202_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="productstock",
            index=models.Index(
                fields=["product", "warehouse"], name="product_pro_product_fed599_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productstock",
            index=models.Index(
                fields=["warehouse", "quantity"], name="product_pro_warehou_cc3905_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productstock",
            index=models.Index(
                fields=["is_active"], name="product_pro_is_acti_75a22e_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="productstock",
            unique_together={("product", "warehouse")},
        ),
        migrations.AlterUniqueTogether(
            name="productlocation",
            unique_together={("product", "shelf", "level", "position")},
        ),
        migrations.AddIndex(
            model_name="productbatch",
            index=models.Index(
                fields=["product", "warehouse", "status"],
                name="product_pro_product_6be83d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="productbatch",
            index=models.Index(
                fields=["expiry_date", "status"], name="product_pro_expiry__dd295c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productbatch",
            index=models.Index(
                fields=["batch_number"], name="product_pro_batch_n_232b55_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="productbatch",
            unique_together={("batch_number", "product")},
        ),
        migrations.AlterUniqueTogether(
            name="locationzone",
            unique_together={("warehouse", "code")},
        ),
        migrations.AlterUniqueTogether(
            name="locationshelf",
            unique_together={("aisle", "code")},
        ),
        migrations.AlterUniqueTogether(
            name="locationaisle",
            unique_together={("zone", "code")},
        ),
        migrations.AddIndex(
            model_name="inventorymovement",
            index=models.Index(
                fields=["product", "warehouse"], name="product_inv_product_5f5312_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventorymovement",
            index=models.Index(
                fields=["movement_date", "movement_type"],
                name="product_inv_movemen_d791c6_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="inventorymovement",
            index=models.Index(
                fields=["document_type", "document_number"],
                name="product_inv_documen_30569b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="inventorymovement",
            index=models.Index(
                fields=["is_approved", "is_reversed"],
                name="product_inv_is_appr_94d4e3_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="inventoryadjustmentitem",
            unique_together={("adjustment", "product")},
        ),
        migrations.AddIndex(
            model_name="inventoryadjustment",
            index=models.Index(
                fields=["warehouse", "adjustment_date"],
                name="product_inv_warehou_009ab0_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryadjustment",
            index=models.Index(
                fields=["status", "adjustment_type"],
                name="product_inv_status_00ae6d_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="expiryalert",
            unique_together={("batch", "alert_type", "alert_date")},
        ),
    ]
